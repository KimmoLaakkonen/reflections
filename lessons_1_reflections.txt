How did viewing a diff between two versions of a file help you see the bug that
was introduced?

It's was more visual. Easier to find. Basically I saved a lot time. Less error and trial.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

I think I could learn as programmer to be more efficient. I could accomplish my task faster. Quality of code would improve as well.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros
- I'm in control if I do it manually
- Degugging is easier later due logical changes

Cons
- I might loose latest work if PC crashes
- Forgot to make versions.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

- There can be several files open in SW development
- Keep all file versions. 

How can you use the commands git log and git diff to view the history of files?

- To find commits. Compare changes between commits

How might using version control make you more confident to make changes that
could break something?

You can pull back earlier version, if code doesn't work and check you can changes.

Now that you have your workspace set up, what do you want to try using Git for?

Don't know yet